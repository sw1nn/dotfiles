#!/bin/sh

cmd=$1
shift;

SPEAKERS=alsa_output.pci-0000_00_1b.0.analog-stereo
HEADPHONES=alsa_output.usb-C-Media_Electronics_Inc._Microsoft_LifeChat_LX-3000-00.analog-stereo


function get_volume() {
    pactl list sinks  \
	| awk '/Sink/{sub("#","",$2); IDX=$2}/State:/{STATE=$2} STATE =="RUNNING" && /Volume: front-left/{sub("%","",$5); printf("%s %s %s\n", IDX, STATE,$5)}' \
	| head -n 1 | awk '{print $3}'
}

function set_volume() {
    pactl list short sinks | awk '/RUNNING/{print $2}' | while read idx
    do
	pactl set-sink-volume $idx $1
    done 
}

case $cmd in
    select-speakers)
        pactl set-default-sink $SPEAKERS
        ;;

    select-headphones)
        pactl set-default-sink $HEADPHONES
        ;;
    volume-up)
	set_volume +5%
        volnoti-show $(get_volume)
        pkill -USR1 py3status || true
        ;;
    volume-down)
	set_volume -5%
        volnoti-show $(get_volume)
        pkill -USR1 py3status || true
        ;;

    mute)
        pactl set-sink-mute @DEFAULT_SINK@ toggle
        if [ $? -eq 0 ]; then
            volnoti-show -m
        else
            volnoti-show $(get_volume)
        fi
        ;;
    toggle-control)
        volwindow=$(xdotool search --name "Volume control")
        if [ -n "${volwindow}" ]; then
            xdotool search --name "Volume control" windowkill
        else
            pavucontrol &
        fi
        ;;
    *)
        echo "No Such command"
        ;;
esac
